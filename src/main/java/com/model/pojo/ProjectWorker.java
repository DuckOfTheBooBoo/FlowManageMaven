package com.model.pojo;
// Generated Sep 30, 2024 4:01:08 PM by Hibernate Tools 4.3.1


import java.util.HashSet;
import java.util.Set;
import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * ProjectWorker generated by hbm2java
 */
@Entity
@Table(name="project_worker"
    ,catalog="flow_manage"
)
public class ProjectWorker  implements java.io.Serializable {


     private ProjectWorkerId id;
     private Project project;
     private User user;
     private String role;
     private Set<Task> tasks = new HashSet<Task>(0);

    public ProjectWorker() {
    }

	
    public ProjectWorker(ProjectWorkerId id, Project project, User user, String role) {
        this.id = id;
        this.project = project;
        this.user = user;
        this.role = role;
    }
    public ProjectWorker(ProjectWorkerId id, Project project, User user, String role, Set<Task> tasks) {
       this.id = id;
       this.project = project;
       this.user = user;
       this.role = role;
       this.tasks = tasks;
    }
   
     @EmbeddedId

    
    @AttributeOverrides( {
        @AttributeOverride(name="userId", column=@Column(name="user_id", nullable=false) ), 
        @AttributeOverride(name="projectId", column=@Column(name="project_id", nullable=false) ) } )
    public ProjectWorkerId getId() {
        return this.id;
    }
    
    public void setId(ProjectWorkerId id) {
        this.id = id;
    }

@ManyToOne(fetch=FetchType.LAZY, targetEntity = Project.class)
    @JoinColumn(name="project_id", nullable=false, insertable=false, updatable=false)
    public Project getProject() {
        return this.project;
    }
    
    public void setProject(Project project) {
        this.project = project;
    }

@ManyToOne(fetch=FetchType.LAZY, targetEntity = User.class)
    @JoinColumn(name="user_id", nullable=false, insertable=false, updatable=false)
    public User getUser() {
        return this.user;
    }
    
    public void setUser(User user) {
        this.user = user;
    }

    
    @Column(name="role", nullable=false, length=20)
    public String getRole() {
        return this.role;
    }
    
    public void setRole(String role) {
        this.role = role;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="projectWorker", targetEntity = Task.class, cascade = CascadeType.ALL)
    public Set<Task> getTasks() {
        return this.tasks;
    }
    
    public void setTasks(Set<Task> tasks) {
        this.tasks = tasks;
    }




}


